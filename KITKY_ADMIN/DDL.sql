SET SERVEROUTPUT ON;

BEGIN
    FOR I IN (
        WITH MY_OBJECTS AS (
            SELECT 'CUST_SEQ' NAME, 'SEQUENCE' TYPE FROM DUAL
            UNION ALL
            SELECT 'SAVED_ADDR_SEQ', 'SEQUENCE' FROM DUAL
            UNION ALL
            SELECT 'DELIVERY_AGENT_SEQ', 'SEQUENCE' FROM DUAL
            UNION ALL
            SELECT 'DELIVERY_VEHICLE_SEQ', 'SEQUENCE' FROM DUAL
            UNION ALL
            SELECT 'ORDER_SEQ', 'SEQUENCE' FROM DUAL
            UNION ALL
            SELECT 'ITEM_SEQ', 'SEQUENCE' FROM DUAL
            UNION ALL
            SELECT 'TRACKING_SEQ', 'SEQUENCE' FROM DUAL
            UNION ALL
            SELECT 'ORDER_HISTORY_SEQ', 'SEQUENCE' FROM DUAL
            UNION ALL
            SELECT 'ITEM', 'TABLE' FROM DUAL
            UNION ALL
            SELECT 'ORDER_TRACKING', 'TABLE' FROM DUAL
            UNION ALL
            SELECT 'ORDERS', 'TABLE' FROM DUAL
            UNION ALL
            SELECT 'VEHICLE', 'TABLE' FROM DUAL
            UNION ALL
            SELECT 'SAVED_ADDRESSES', 'TABLE' FROM DUAL
            UNION ALL
            SELECT 'CUSTOMER', 'TABLE' FROM DUAL
            UNION ALL
            SELECT 'DELIVERY_AGENT', 'TABLE' FROM DUAL
            UNION ALL
            SELECT 'ORDER_HISTORY', 'TABLE' FROM DUAL
        )
        SELECT M.NAME, M.TYPE
        FROM MY_OBJECTS M INNER JOIN USER_OBJECTS O ON (M.NAME = O.OBJECT_NAME AND M.TYPE = O.OBJECT_TYPE)
    )
    LOOP
        EXECUTE IMMEDIATE 'DROP ' || I.TYPE || ' ' || I.NAME;
        DBMS_OUTPUT.PUT_LINE(I.TYPE || ' DROPPED: ' || I.NAME);
    END LOOP;
EXCEPTION
    WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE(SQLERRM);
END;
/

CREATE SEQUENCE CUST_SEQ;

CREATE TABLE CUSTOMER (
    CUST_ID NUMBER PRIMARY KEY,
    CONTACT_NO NUMBER(10) NOT NULL UNIQUE,
    FIRST_NAME VARCHAR(50) NOT NULL,
    LAST_NAME VARCHAR(50) NOT NULL,
    PASSWORD VARCHAR(12) NOT NULL,
    EMAIL VARCHAR(50) NOT NULL UNIQUE
);

CREATE SEQUENCE SAVED_ADDR_SEQ;

CREATE TABLE SAVED_ADDRESSES (
    ADDRESS_ID NUMBER PRIMARY KEY,
    ADDRESS_NAME VARCHAR(20) NOT NULL,
    STREET_ADDRESS VARCHAR(100) NOT NULL,
    CITY VARCHAR(30) NOT NULL,
    STATE VARCHAR(30) NOT NULL,
    ZIP_CODE NUMBER(5) NOT NULL,
    CUST_ID NUMBER REFERENCES CUSTOMER (CUST_ID) NOT NULL
);

CREATE SEQUENCE DELIVERY_AGENT_SEQ;

CREATE TABLE DELIVERY_AGENT (
    AGENT_ID NUMBER PRIMARY KEY,
    FIRST_NAME VARCHAR(50) NOT NULL,
    LAST_NAME VARCHAR(50) NOT NULL,
    PASSWORD VARCHAR(12) NOT NULL,
    EMAIL VARCHAR(50) NOT NULL UNIQUE,
    CONTACT_NO NUMBER(10) NOT NULL UNIQUE,
    STREET_ADDRESS VARCHAR(100) NOT NULL,
    CITY VARCHAR(30) NOT NULL,
    STATE VARCHAR(30) NOT NULL,
    ZIP_CODE NUMBER(5) NOT NULL
);

CREATE SEQUENCE DELIVERY_VEHICLE_SEQ;

CREATE TABLE VEHICLE (
    VEHICLE_ID NUMBER PRIMARY KEY,
    VEHICLE_NUMBER NUMBER NOT NULL UNIQUE,
    TYPE VARCHAR(30) NOT NULL,
    AGENT_ID NUMBER REFERENCES DELIVERY_AGENT (AGENT_ID) NOT NULL
);
  
CREATE SEQUENCE ORDER_SEQ; 

CREATE TABLE ORDERS (
    COLLECT_CONTACT_NO NUMBER(10) NOT NULL,
    COLLECT_STREET_ADDRESS VARCHAR(100) NOT NULL,
    COLLECT_ZIP_CODE NUMBER(5) NOT NULL,
    STATE VARCHAR(30) NOT NULL,
    CITY VARCHAR(30) NOT NULL,
    DELIVERY_ZIP_CODE NUMBER(5) NOT NULL,
    DELIVERY_STREET_ADDRESS VARCHAR(100) NOT NULL,
    DELIVERY_PERSON_NAME VARCHAR(50) NOT NULL,
    DELIVERY_CONTACT_NO NUMBER(10) NOT NULL,
    COLLECT_PERSON_NAME VARCHAR(50) NOT NULL,
    ORDER_ID NUMBER PRIMARY KEY,
    AGENT_ID NUMBER REFERENCES DELIVERY_AGENT (AGENT_ID),
    CUST_ID NUMBER REFERENCES CUSTOMER (CUST_ID) NOT NULL,
    ORDER_AMOUNT NUMBER,
    ORDER_INSTRUCTIONS VARCHAR(500),
    TIP_TO_AGENT NUMBER(10),
    PAYMENT_STATUS VARCHAR(50) CHECK(PAYMENT_STATUS IN ('FAILED', 'SUCCESSFUL', 'REFUNDED')),
    RATING NUMBER(1),
    FEEDBACK VARCHAR(100)
);

CREATE SEQUENCE ITEM_SEQ;

CREATE TABLE ITEM (
    ITEM_ID NUMBER PRIMARY KEY,
    ITEM_NAME VARCHAR(50) NOT NULL,
    SIZE_CATEGORY VARCHAR(50) NOT NULL CHECK (SIZE_CATEGORY IN ('SMALL', 'MEDIUM', 'LARGE')),
    ORDER_ID NUMBER REFERENCES ORDERS (ORDER_ID) NOT NULL
);
  
CREATE SEQUENCE TRACKING_SEQ;

CREATE TABLE ORDER_TRACKING (
    TRACKING_ID NUMBER PRIMARY KEY,
    ORDER_STATUS VARCHAR(50) NOT NULL CHECK (ORDER_STATUS IN ('INITIAL', 'MATCHING_DRIVER', 'DRIVER_MATCHED', 'PLACED', 'PICKED', 'DELIVERED', 'CANCELLED')),
    DATE_TIME TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    ORDER_ID NUMBER REFERENCES ORDERS (ORDER_ID) NOT NULL
);

CREATE SEQUENCE ORDER_HISTORY_SEQ;

CREATE TABLE ORDER_HISTORY (
    HISTORY_ID NUMBER PRIMARY KEY,
    ORDER_ID NUMBER,
    AGENT_ID NUMBER,
    CUST_ID NUMBER,
    ORDER_AMOUNT NUMBER,
    TIP_TO_AGENT NUMBER(10),
    PAYMENT_STATUS VARCHAR(50),
    RATING NUMBER(1),
    FEEDBACK VARCHAR(100),
    UPDATED_AT TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY VARCHAR(100) DEFAULT USER
);