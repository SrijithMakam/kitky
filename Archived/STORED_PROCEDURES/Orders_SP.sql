create or replace procedure ADD_ORDER(
    PI_COLLECT_CONTACT_NO NUMBER, 
    PI_COLLECT_STREET_ADDRESS VARCHAR, 
    PI_COLLECT_ZIP_CODE NUMBER, 
    PI_STATE VARCHAR, 
    PI_CITY VARCHAR, 
    PI_DELIVERY_ZIP_CODE NUMBER, 
    PI_DELIVERY_STREET_ADDRESS VARCHAR, 
    PI_DELIVERY_PERSON_NAME VARCHAR, 
    PI_DELIVERY_CONTACT_NO NUMBER, 
    PI_COLLECT_PERSON_NAME VARCHAR, 
    PI_ORDER_INSTRUCTIONS VARCHAR, 
    PI_CUST_ID NUMBER
) AS

INVALID_CUSTOMER EXCEPTION;
V_CUST NUMBER;

begin

SELECT COUNT(CUST_ID) INTO V_CUST FROM CUSTOMER WHERE CUST_ID = PI_CUST_ID;
    IF V_CUST = 0 THEN
        RAISE INVALID_CUSTOMER;
    END IF;
    
    INSERT INTO ORDERS(
        COLLECT_CONTACT_NO,
        COLLECT_STREET_ADDRESS,
        COLLECT_ZIP_CODE,
        STATE,
        CITY,
        DELIVERY_ZIP_CODE,
        DELIVERY_STREET_ADDRESS,
        DELIVERY_PERSON_NAME,
        DELIVERY_CONTACT_NO,
        COLLECT_PERSON_NAME,
        ORDER_ID,
        CUST_ID,
        ORDER_INSTRUCTIONS
    ) VALUES (
        PI_COLLECT_CONTACT_NO,
        INITCAP(PI_COLLECT_STREET_ADDRESS),
        PI_COLLECT_ZIP_CODE,
        INITCAP(PI_STATE),
        INITCAP(PI_CITY),
        PI_DELIVERY_ZIP_CODE,
        INITCAP(PI_DELIVERY_STREET_ADDRESS),
        INITCAP(PI_DELIVERY_PERSON_NAME),
        PI_DELIVERY_CONTACT_NO,
        INITCAP(PI_COLLECT_PERSON_NAME),
        ORDER_SEQ.NEXTVAL,
        PI_CUST_ID,
        INITCAP(PI_ORDER_INSTRUCTIONS)
    );

    INSERT INTO ORDER_TRACKING(
        TRACKING_ID, 
        ORDER_STATUS,
        ORDER_ID
    ) VALUES (
        TRACKING_SEQ.NEXTVAL, 
        'INITIAL', 
        ORDER_SEQ.CURRVAL
    );

    DBMS_OUTPUT.PUT_LINE('ORDER Added');
    commit;
EXCEPTION
    WHEN  INVALID_CUSTOMER THEN
        DBMS_OUTPUT.PUT_LINE('Customer doest not exist');
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE(SQLERRM);
end ADD_ORDER;
/


--EXEC ADD_ORDER(5555555555, '123 Collection St', 54321, 'New York', 'New York', 98765, '789 Beach Blvd', 'Ken', 8765432109, 'Bob','Handle with care', 3);