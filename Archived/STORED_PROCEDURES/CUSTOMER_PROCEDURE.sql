SET SERVEROUTPUT ON;

CREATE OR REPLACE PROCEDURE ADD_CUSTOMER (
    PI_CONTACT_NO CUSTOMER.CONTACT_NO%TYPE,
    PI_FIRST_NAME CUSTOMER.FIRST_NAME%TYPE,
    PI_LAST_NAME CUSTOMER.LAST_NAME%TYPE,
    PI_PASSWORD CUSTOMER.PASSWORD%TYPE,
    PI_EMAIL CUSTOMER.EMAIL%TYPE
) AS 
    E_CONTACT_NO_LENGTH EXCEPTION;
    E_CONTACT_NO_EXISTS EXCEPTION;
    E_EMAIL_EXISTS EXCEPTION;
    E_PASSWORD_VALID EXCEPTION;
    
    V_CONTACT_NOS NUMBER;
    V_EMAIL_IDS NUMBER;
BEGIN
    IF LENGTH(PI_CONTACT_NO) != 10 THEN
        RAISE E_CONTACT_NO_LENGTH;
    END IF;
    
    IF LENGTH(PI_PASSWORD) < 8 THEN
        RAISE E_PASSWORD_VALID;
    END IF;
    
    SELECT COUNT(CUST_ID) INTO V_CONTACT_NOS FROM CUSTOMER WHERE CONTACT_NO = PI_CONTACT_NO;
    IF V_CONTACT_NOS > 0 THEN
        RAISE E_CONTACT_NO_EXISTS;
    END IF;
    
    SELECT COUNT(CUST_ID) INTO V_EMAIL_IDS FROM CUSTOMER WHERE EMAIL = LOWER(PI_EMAIL);
    IF V_EMAIL_IDS > 0 THEN
        RAISE E_EMAIL_EXISTS;
    END IF;
    
    INSERT INTO CUSTOMER VALUES (
        CUST_SEQ.NEXTVAL, 
        PI_CONTACT_NO, 
        INITCAP(PI_FIRST_NAME),
        INITCAP(PI_LAST_NAME),
        PI_PASSWORD,
        LOWER(PI_EMAIL)
    );
    
    COMMIT;
    DBMS_OUTPUT.PUT_LINE('CUSTOMER ADDED SUCCESSFULLY');
EXCEPTION
    WHEN E_PASSWORD_VALID THEN
        DBMS_OUTPUT.PUT_LINE('PASSWORD SHOULD HAVE AT LEAST 8 CHARACTERS');
    WHEN E_EMAIL_EXISTS THEN
        DBMS_OUTPUT.PUT_LINE('EMAIL ID ALREADY EXISTS. PLEASE SIGN-IN DIRECTLTY');
    WHEN E_CONTACT_NO_EXISTS THEN
        DBMS_OUTPUT.PUT_LINE('CONTACT NO ALREADY EXISTS. PLEASE SIGN-IN DIRECTLY');
    WHEN E_CONTACT_NO_LENGTH THEN
        DBMS_OUTPUT.PUT_LINE('PLEASE INPUT VALID CONTACT NUMBER');
    WHEN OTHERS THEN
        ROLLBACK;
        DBMS_OUTPUT.PUT_LINE(SQLERRM);
END ADD_CUSTOMER;
/